getwd()
getwd()
library(ggplot2)
install.packages("ggplot2")
rm(list = ls())
#loads necessary packages
library(ggplot2)
mpg=read.table("mpg.txt",header=TRUE,sep="\t",stringsAsFactors = FALSE)
dim(mpg)
head(mpg)
#plot of displacement (engine size) vs city mpg (cty)
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point()
#remove grey background
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
theme_bw()
#remove grey background and gridlines
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
theme_classic()
#change the x and y labels
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=22,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#log transform the y axis
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
scale_y_log10() +
theme_classic()
#scale arguments can customize range and tick locations
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
scale_y_log10(limits=c(1,100),
breaks=c(1,10,100)) +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=22,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=13,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=2,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=15,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=14,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=8,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=7,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=6,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=19,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#geom_point arguments can alter the appearance of points
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point(color="blue",shape=22,size=3) +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#you can color code points based on continuous or categorical variables
#continuous
ggplot(data=mpg,
aes(x=displ,y=cty,color=cyl)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic()
#categorical
ggplot(data=mpg,
aes(x=displ,y=cty,color=as.factor(cyl))) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
theme_classic() +
theme(legend.title=element_blank())
#categorical - change display colors
ggplot(data=mpg,
aes(x=displ,y=cty,color=as.factor(cyl))) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
scale_color_manual(values=c('red','green','blue','orange')) +
theme_classic() +
theme(legend.title=element_blank())
#add a linear trendline with a new layer
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
stat_smooth(method="lm") +
theme_classic() +
#add a linear trendline with a new layer
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
stat_smooth(method="lm") +
theme_classic()
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
stat_smooth(method="lm") +
theme_classic()
#add a spline with a new layer
ggplot(data=mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("displacement (1)") +
ylab("miles per gallon-city") +
stat_smooth(method="loess") +
theme_classic()
#histogram of mpg hwy
ggplot(data=mpg,aes(x=hwy)) +
geom_histogram() +
theme_classic()
#change number of bins
ggplot(data=mpg,aes(x=hwy)) +
geom_histogram(binwidth = 5) +
theme_classic()
#specify color in geom_histogram
ggplot(data=mpg,aes(x=hwy)) +
geom_histogram(binwidth = 5,fill="red",color="black") +
theme_classic()
#faceting allows the same plot across different categories to be generated
ggplot(data=mpg,aes(x=displ,y=cty)) +
geom_point() +
facet_wrap(~drv) +
theme_classic()
plot1 <- ggplot(data = mpg,
aes(x = displ, y = cty, color = as.factor(cyl))) +
geom_point() +
xlab("discplacement (l)") +
ylab("miles per gallon-city") +
scale_color_manual(values = c('red','green','blue','orange')) +
theme_classic() +
theme(legend.title=element_blank())
plot2 <- ggplot(data = mpg, aes(x = hwy)) +
geom_histogram(binwidth = 5, fill = "red", color = "black") +
theme_classic()
fig1 <- plot_grid(plot1, plot2,
labels = c("a", "b"),
rel_widths = c(1, 0.85),
ncol = 2,
nrow = 1)
detach("package:ggplot2", unload = TRUE)
install.packages("cowplot")
library(cowplot)
plot1 <- ggplot(data = mpg,
aes(x = displ, y = cty, color = as.factor(cyl))) +
geom_point() +
xlab("discplacement (l)") +
ylab("miles per gallon-city") +
scale_color_manual(values = c('red','green','blue','orange')) +
theme_classic() +
theme(legend.title=element_blank())
plot2 <- ggplot(data = mpg, aes(x = hwy)) +
geom_histogram(binwidth = 5, fill = "red", color = "black") +
theme_classic()
library(ggplot2)
plot1 <- ggplot(data = mpg,
aes(x = displ, y = cty, color = as.factor(cyl))) +
geom_point() +
xlab("discplacement (l)") +
ylab("miles per gallon-city") +
scale_color_manual(values = c('red','green','blue','orange')) +
theme_classic() +
theme(legend.title=element_blank())
plot2 <- ggplot(data = mpg, aes(x = hwy)) +
geom_histogram(binwidth = 5, fill = "red", color = "black") +
theme_classic()
fig1 <- plot_grid(plot1, plot2,
labels = c("a", "b"),
rel_widths = c(1, 0.85),
ncol = 2,
nrow = 1)
plot1
plot2
fig1
ggsave(filename = "Fig1.pdf",
plot = fig1,
width = 8,
height = 5,
dpi = 300)
list.files()
library(ggplot2)
getwd()
dim(mpg)
mpg=read.table("mpg.txt",header=TRUE,sep="\t",stringsAsFactors = FALSE)
dim(mpg)
head(mpg)
#histogram of engine size
ggplot(mpg,
aes(x=displ)) +
geom_histogram() +
xlab("Engine Size") +
theme_classic()
#histogram of engine size
ggplot(mpg,
aes(x=displ)) +
geom_histogram(fill="red") +
xlab("Engine Size") +
theme_classic()
#scatter plot of displ and cty from the mpg data set
ggplot(mpg,
aes(x=dipl,y=cty)) +
geom_point() +
xlab("Engine Size") +
ylab("Miles per gallon (City)")
#scatter plot of displ and cty from the mpg data set
ggplot(mpg,
aes(x=displ,y=cty)) +
geom_point() +
xlab("Engine Size") +
ylab("Miles per gallon (City)")
#scatter plot of displ and cty from the mpg data set
ggplot(mpg,
aes(x=displ,y=cty)) +
geom_point(shape=22) +
xlab("Engine Size") +
ylab("Miles per gallon (City)")
#scatter plot of displ and cty from the mpg data set
ggplot(mpg,
aes(x=displ,y=cty)) +
geom_point(shape=22) +
xlab("Engine Size") +
ylab("Miles per gallon (City)") +
theme_minimal()
#scatter plot of displ and cty from the mpg data set
ggplot(mpg,
aes(x=displ,y=cty)) +
geom_point(shape=22) +
xlab("Engine Size") +
ylab("Miles per gallon (City)") +
theme_classic()
#same plot but with cyl as a third variable as categorical
ggplot(mpg,
aes(x=displ,y=cty,fill=as.factor(cyl))) +
geom_point(shape=22) +
xlab("Engine Size") +
ylab("Miles per gallon (City)") +
theme_classic()
# plot of average highway mpg +/- standard error for each car class
ggplot(mpg, aes(x = class, y = hwy)) +
stat_summary(fun = mean,
geom = "point") +
stat_summary(fun.data = mean_se,
geom = "errorbar",
width = 0.5) +
theme_bw() +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ggplot(mpg,
aes(x=cyl,y=displ)) +
stat_summary(fun=mean,
geom="point") +
stat_summary(fun.data=mean_se,
geom="errorbar",
width=0.5) +
theme_bw()
ggplot(mpg,
aes(x=cyl,y=displ)) +
stat_summary(fun=mean,
geom="point") +
stat_summary(fun.data=mean_se,
geom="errorbar",
width=0.5) +
theme_bw() +
xlab("Number of Cylinders") +
ylab("Engine Size")
ggplot(mpg,
aes(x=cyl,y=displ)) +
stat_summary(fun=mean,
geom="bar") +
stat_summary(fun.data=mean_se,
geom="errorbar",
width=0.5) +
theme_bw() +
xlab("Number of Cylinders") +
ylab("Engine Size")
ggplot(mpg,
aes(x=cyl,y=displ)) +
stat_summary(fun.y=mean,
geom="bar") +
stat_summary(fun.data=mean_se,
geom="errorbar",
width=0.5) +
theme_bw() +
xlab("Number of Cylinders") +
ylab("Engine Size")
ggplot(mpg,
aes(x=cyl,y=displ)) +
stat_summary(fun.y=mean,
geom="bar") +
stat_summary(fun.data=mean_se,
geom="errorbar",
width=0.3) +
theme_bw() +
xlab("Number of Cylinders") +
ylab("Engine Size")
ggplot(mpg,
aes(x=cyl,y=displ)) +
stat_summary(fun.y="mean",
geom="bar") +
stat_summary(fun.data="mean_se",
geom="errorbar",
width=0.3) +
theme_bw() +
xlab("Number of Cylinders") +
ylab("Engine Size")
iris<-read.csv("iris.csv")
ggplot(data=iris +
geom_density(aes(x=Sepal.Width,color=Species)))
ggplot(data=iris) +
geom_density(aes(x=Sepal.Width,color=Species)))
ggplot(data=iris) +
geom_density(aes(x=Sepal.Width,color=Species))
ggplot(data=iris) +
geom_density(aes(x=Sepal.Width,color=Species)) +
theme_classic()
library(ggplot2)
soccer<-read.table("soccer.txt",header=TRUE,sep="\t",stringsAsFactors = FALSE)
getwd()
setwd("Biocomputing_Exercise9")
soccer<-read.table("soccer.txt",header=TRUE,sep="\t",stringsAsFactors = FALSE)
dim(soccer)
soccer
ggplot(soccer,
aes(x=wages,y=position)) +
geom_point() +
xlab("Annual Wage Bill (millions)") +
ylab("Final Position in Table") +
theme_classic()
#scatter plot of annual wages vs table position
#expect a negative trend since higher table position means lower numbers
ggplot(soccer,
aes(x=wages,y=position)) +
geom_point() +
xlab("Annual Wage Bill (millions)") +
ylab("Final Position in Table") +
stat_smooth(method="lm") +
theme_classic()
#scatter plot of annual wages vs table position
#expect a negative trend since higher table position means lower numbers
ggplot(soccer,
aes(x=wages,y=position)) +
geom_point() +
xlab("Annual Wage Bill (millions of pounds)") +
ylab("Final Position in Table") +
stat_smooth(method="lm") +
theme_classic()
#loads the data.txt file into R
data<-read.table("data.txt",header=TRUE,sep=",",stringsAsFactors = FALSE)
head(data)
dim(data)
table(data)
head(data)
#barplot of the means of all four regions
ggplot(data,
aes(x=region,y=observations)) +
geom_bar() +
xlab("Region") +
ylab("Mean Observation") +
theme_classic()
#barplot of the means of all four regions
ggplot(data=data,
aes(x=region,y=observations)) +
geom_bar() +
xlab("Region") +
ylab("Mean Observation") +
theme_classic()
#barplot of the means of all four regions
ggplot(data=data,
aes(x=region,y=observations)) +
xlab("Region") +
ylab("Mean Observation") +
theme_classic()
#barplot of the means of all four regions
ggplot(data=data,
aes(x=region)) +
xlab("Region") +
ylab("Mean Observation") +
theme_classic()
xlab("Region") +
ylab("Mean Observation") +
theme_classic()
#barplot of the means of all four regions
ggplot(data=data,
aes(x=region,y=observations)) +
stat_summary(fun="mean"
geom="bar") +
xlab("Region") +
ylab("Mean Observation") +
theme_classic()
#barplot of the means of all four regions
ggplot(data=data,
aes(x=region,y=observations)) +
stat_summary(fun="mean"
geom="bar") +
theme_classic()
head(data)
#barplot of the means of all four regions
ggplot(data=data,
aes(x=region,y=observations)) +
stat_summary(fun.y="mean",
geom="bar") +
theme_classic()
#barplot of the means of all four regions
ggplot(data=data,
aes(x=region,y=observations)) +
stat_summary(fun.y="mean",
geom="bar") +
xlab("Region") +
ylab("Mean Observations") +
theme_classic()
#scatter plot of region and observations
ggplot(data=data,
aes(x=region,y=observations)) +
geom_jitter() +
xlab("Region") +
ylab("Observations") +
theme_classic()
#scatter plot of annual wages vs table position
#expect a negative trend since higher table position means lower numbers
ggplot(soccer,
aes(x=wages,y=position)) +
geom_point() +
xlab("Annual Wage Bill (millions of pounds)") +
ylab("Final Position in Table") +
stat_smooth(method="lm") +
theme_classic()
soccer
